(DATA  a)
(FUNCTION  addThem  [(int d) (int e)]
  (BB 2
    (OPER 8 Load [(r 1)]  [(m ESP)(i 4)])
    (OPER 9 Load [(r 2)]  [(m ESP)(i 8)])
  )
  (BB 3
    (OPER 10 Mov [(r 4)]  [(r 1)])
    (OPER 4 Add_I [(r 4)]  [(r 4)(r 2)])
    (OPER 5 Mov [(r 3)]  [(r 4)])
    (OPER 6 Push [(m EAX)]  [(r 3)] [(PARAM_NUM 0)])
  )
  (BB 1
    (OPER 2 Return []  [(m EAX)])
  )
)
(FUNCTION  putDigit  [(int s)]
  (BB 2
    (OPER 9 Load [(r 1)]  [(m ESP)(i 4)])
  )
  (BB 3
    (OPER 4 Push [(r 2)]  [(i 48)] [(PARAM_NUM 0)])
    (OPER 10 Mov [(r 3)]  [(r 2)])
    (OPER 5 Add_I [(r 3)]  [(r 3)(r 1)])
    (OPER 6 Push [(r 4)]  [(r 3)] [(PARAM_NUM 0)])
    (OPER 7 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 11 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 8 Store [(m EAX)]  [(r 5)])
  )
  (BB 1
    (OPER 2 Return []  [(m EAX)])
  )
)
(FUNCTION  printInt  [(int r)]
  (BB 2
    (OPER 86 Load [(r 1)]  [(m ESP)(i 4)])
  )
  (BB 3
    (OPER 4 Push [(r 4)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 5 Mov [(r 3)]  [(r 4)])
    (OPER 6 Push [(r 5)]  [(i 10000)] [(PARAM_NUM 0)])
    (OPER 88 Mov [(r 6)]  [(i 0)])
    (OPER 87 Cmp [(m Flags)]  [(r 1)(r 5)])
    (OPER 89 BLT []  [(bb 20)(m Flags)])
  )
  (BB 19
    (OPER 90 Mov [(r 6)]  [(i 1)])
  )
  (BB 20
    (OPER 8 Push [(r 7)]  [(r 6)] [(PARAM_NUM 0)])
    (OPER 91 Cmp [(m Flags)]  [(r 7)(i 0)])
    (OPER 9 BEQ []  [(bb 5)(m Flags)()
])
  )
  (BB 4
    (OPER 10 Push [(r 8)]  [(i 45)] [(PARAM_NUM 0)])
    (OPER 11 Push [(r 9)]  [(r 8)] [(PARAM_NUM 0)])
    (OPER 12 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 92 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 13 Store [(m EAX)]  [(r 10)])
    (OPER 14 Push [(r 11)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 15 Push [(r 12)]  [(r 11)] [(PARAM_NUM 0)])
    (OPER 16 JSR []  [(s putDigit)] [(numParams 1)])
    (OPER 93 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 17 Store [(m EAX)]  [(r 13)])
  )
  (BB 7
    (OPER 22 Push [(r 17)]  [(i 1000)] [(PARAM_NUM 0)])
    (OPER 94 Mov [(m EDX)]  [(i 0)])
    (OPER 95 Mov [(m EAX)]  [(r 1)])
    (OPER 23 Div [(m EAX)(m EDX)]  [(m EAX)(r 17)(m EDX)])
    (OPER 96 Mov [(r 18)]  [(m EAX)])
    (OPER 24 Mov [(r 2)]  [(r 18)])
    (OPER 25 Push [(r 19)]  [(r 2)] [(PARAM_NUM 0)])
    (OPER 26 JSR []  [(s putDigit)] [(numParams 1)])
    (OPER 97 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 27 Store [(m EAX)]  [(r 20)])
    (OPER 28 Push [(r 21)]  [(i 1000)] [(PARAM_NUM 0)])
    (OPER 98 Mov [(m EAX)]  [(r 2)])
    (OPER 29 Mul [(m EAX)(m EDX)]  [(m EAX)(r 21)])
    (OPER 99 Mov [(r 22)]  [(m EAX)])
    (OPER 100 Mov [(r 23)]  [(r 1)])
    (OPER 30 Sub_I [(r 23)]  [(r 23)(r 22)])
    (OPER 31 Mov [(r 1)]  [(r 23)])
    (OPER 32 Push [(r 24)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 33 Mov [(r 3)]  [(r 24)])
  )
  (BB 8
    (OPER 34 Push [(r 25)]  [(i 100)] [(PARAM_NUM 0)])
    (OPER 102 Mov [(r 26)]  [(i 0)])
    (OPER 101 Cmp [(m Flags)]  [(r 1)(r 25)])
    (OPER 103 BLT []  [(bb 22)(m Flags)])
  )
  (BB 21
    (OPER 104 Mov [(r 26)]  [(i 1)])
  )
  (BB 22
    (OPER 36 Push [(r 27)]  [(r 26)] [(PARAM_NUM 0)])
    (OPER 105 Cmp [(m Flags)]  [(r 27)(i 0)])
    (OPER 37 BEQ []  [(bb 10)(m Flags)()
])
  )
  (BB 9
    (OPER 38 Push [(r 28)]  [(i 100)] [(PARAM_NUM 0)])
    (OPER 106 Mov [(m EDX)]  [(i 0)])
    (OPER 107 Mov [(m EAX)]  [(r 1)])
    (OPER 39 Div [(m EAX)(m EDX)]  [(m EAX)(r 28)(m EDX)])
    (OPER 108 Mov [(r 29)]  [(m EAX)])
    (OPER 40 Mov [(r 2)]  [(r 29)])
    (OPER 41 Push [(r 30)]  [(r 2)] [(PARAM_NUM 0)])
    (OPER 42 JSR []  [(s putDigit)] [(numParams 1)])
    (OPER 109 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 43 Store [(m EAX)]  [(r 31)])
    (OPER 44 Push [(r 32)]  [(i 100)] [(PARAM_NUM 0)])
    (OPER 110 Mov [(m EAX)]  [(r 2)])
    (OPER 45 Mul [(m EAX)(m EDX)]  [(m EAX)(r 32)])
    (OPER 111 Mov [(r 33)]  [(m EAX)])
    (OPER 112 Mov [(r 34)]  [(r 1)])
    (OPER 46 Sub_I [(r 34)]  [(r 34)(r 33)])
    (OPER 47 Mov [(r 1)]  [(r 34)])
    (OPER 48 Push [(r 35)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 49 Mov [(r 3)]  [(r 35)])
  )
  (BB 11
    (OPER 59 Push [(r 42)]  [(i 10)] [(PARAM_NUM 0)])
    (OPER 114 Mov [(r 43)]  [(i 0)])
    (OPER 113 Cmp [(m Flags)]  [(r 1)(r 42)])
    (OPER 115 BLT []  [(bb 24)(m Flags)])
  )
  (BB 23
    (OPER 116 Mov [(r 43)]  [(i 1)])
  )
  (BB 24
    (OPER 61 Push [(r 44)]  [(r 43)] [(PARAM_NUM 0)])
    (OPER 117 Cmp [(m Flags)]  [(r 44)(i 0)])
    (OPER 62 BEQ []  [(bb 15)(m Flags)()
])
  )
  (BB 12
    (OPER 54 Push [(r 39)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 55 Push [(r 40)]  [(r 39)] [(PARAM_NUM 0)])
    (OPER 56 JSR []  [(s putDigit)] [(numParams 1)])
    (OPER 118 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 57 Store [(m EAX)]  [(r 41)])
  )
  (BB 13
    (OPER 58 Jmp [(bb 11)]  [(bb 11)])
  )
  (BB 16
    (OPER 82 Push [(r 58)]  [(r 1)] [(PARAM_NUM 0)])
    (OPER 83 JSR []  [(s putDigit)] [(numParams 1)])
    (OPER 119 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 84 Store [(m EAX)]  [(r 59)])
    (OPER 85 Jmp [(bb 6)]  [(bb 7)])
  )
  (BB 10
    (OPER 50 Push [(r 36)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 121 Mov [(r 37)]  [(i 0)])
    (OPER 120 Cmp [(m Flags)]  [(r 3)(r 36)])
    (OPER 122 BNE []  [(bb 26)(m Flags)])
  )
  (BB 25
    (OPER 123 Mov [(r 37)]  [(i 1)])
  )
  (BB 26
    (OPER 52 Push [(r 38)]  [(r 37)] [(PARAM_NUM 0)])
    (OPER 124 Cmp [(m Flags)]  [(r 38)(i 0)])
    (OPER 53 BEQ []  [(bb 11)(m Flags)()
])
  )
  (BB 15
    (OPER 73 Push [(r 52)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 126 Mov [(r 53)]  [(i 0)])
    (OPER 125 Cmp [(m Flags)]  [(r 3)(r 52)])
    (OPER 127 BNE []  [(bb 28)(m Flags)])
  )
  (BB 27
    (OPER 128 Mov [(r 53)]  [(i 1)])
  )
  (BB 28
    (OPER 75 Push [(r 54)]  [(r 53)] [(PARAM_NUM 0)])
    (OPER 129 Cmp [(m Flags)]  [(r 54)(i 0)])
    (OPER 76 BEQ []  [(bb 16)(m Flags)()
])
  )
  (BB 5
    (OPER 18 Push [(r 14)]  [(i 1000)] [(PARAM_NUM 0)])
    (OPER 131 Mov [(r 15)]  [(i 0)])
    (OPER 130 Cmp [(m Flags)]  [(r 1)(r 14)])
    (OPER 132 BLT []  [(bb 30)(m Flags)])
  )
  (BB 29
    (OPER 133 Mov [(r 15)]  [(i 1)])
  )
  (BB 30
    (OPER 20 Push [(r 16)]  [(r 15)] [(PARAM_NUM 0)])
    (OPER 134 Cmp [(m Flags)]  [(r 16)(i 0)])
    (OPER 21 BEQ []  [(bb 8)(m Flags)()
])
  )
)
(FUNCTION  main  []
  (BB 2
  )
  (BB 3
    (OPER 4 Push [(r 6)]  [(i 5)] [(PARAM_NUM 0)])
    (OPER 5 Mov [(r 2)]  [(r 6)])
    (OPER 6 Mov [(r 1)]  [(r 2)])
    (OPER 7 Push [(r 7)]  [(i 5)] [(PARAM_NUM 0)])
    (OPER 183 Mov [(r 8)]  [(i 0)])
    (OPER 182 Cmp [(m Flags)]  [(r 1)(r 7)])
    (OPER 184 BNE []  [(bb 27)(m Flags)])
  )
  (BB 26
    (OPER 185 Mov [(r 8)]  [(i 1)])
  )
  (BB 27
    (OPER 9 Push [(r 9)]  [(r 8)] [(PARAM_NUM 0)])
    (OPER 186 Cmp [(m Flags)]  [(r 9)(i 0)])
    (OPER 10 BEQ []  [(bb 5)(m Flags)()
])
  )
  (BB 4
    (OPER 11 Push [(r 10)]  [(i 3)] [(PARAM_NUM 0)])
    (OPER 12 Store []  [(r 10)(s a)])
  )
  (BB 6
    (OPER 16 Push [(r 12)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 17 Mov [(r 3)]  [(r 12)])
    (OPER 18 Push [(r 13)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 19 Mov [(r 5)]  [(r 13)])
    (OPER 20 Push [(r 14)]  [(i 8)] [(PARAM_NUM 0)])
    (OPER 188 Mov [(r 15)]  [(i 0)])
    (OPER 187 Cmp [(m Flags)]  [(r 5)(r 14)])
    (OPER 189 BGT []  [(bb 29)(m Flags)])
  )
  (BB 28
    (OPER 190 Mov [(r 15)]  [(i 1)])
  )
  (BB 29
    (OPER 22 Push [(r 16)]  [(r 15)] [(PARAM_NUM 0)])
    (OPER 191 Cmp [(m Flags)]  [(r 16)(i 0)])
    (OPER 23 BEQ []  [(bb 8)(m Flags)()
])
  )
  (BB 7
    (OPER 192 Mov [(r 17)]  [(r 3)])
    (OPER 24 Add_I [(r 17)]  [(r 17)(r 5)])
    (OPER 25 Mov [(r 3)]  [(r 17)])
    (OPER 26 Push [(r 18)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 193 Mov [(r 19)]  [(r 5)])
    (OPER 27 Add_I [(r 19)]  [(r 19)(r 18)])
    (OPER 28 Mov [(r 5)]  [(r 19)])
    (OPER 29 Push [(r 20)]  [(r 15)] [(PARAM_NUM 0)])
    (OPER 194 Cmp [(m Flags)]  [(r 20)(i 0)])
    (OPER 30 BNE []  [(bb 7)(m Flags)()
])
  )
  (BB 8
    (OPER 31 Push [(r 21)]  [(i 3)] [(PARAM_NUM 0)])
    (OPER 195 Mov [(m EDX)]  [(i 0)])
    (OPER 196 Mov [(m EAX)]  [(r 3)])
    (OPER 32 Div [(m EAX)(m EDX)]  [(m EAX)(r 21)(m EDX)])
    (OPER 197 Mov [(r 22)]  [(m EAX)])
    (OPER 33 Mov [(r 4)]  [(r 22)])
    (OPER 34 Push [(r 23)]  [(i 4)] [(PARAM_NUM 0)])
    (OPER 198 Mov [(m EAX)]  [(r 4)])
    (OPER 35 Mul [(m EAX)(m EDX)]  [(m EAX)(r 23)])
    (OPER 199 Mov [(r 24)]  [(m EAX)])
    (OPER 36 Mov [(r 3)]  [(r 24)])
    (OPER 37 Load [(r 25)]  [(s a)])
    (OPER 38 Push [(r 26)]  [(r 25)] [(PARAM_NUM 0)])
    (OPER 39 Push [(r 27)]  [(r 1)] [(PARAM_NUM 1)])
    (OPER 40 JSR []  [(s addThem)] [(numParams 2)])
    (OPER 200 Add_I [(m ESP)]  [(m ESP)(i 8)])
    (OPER 41 Store [(m EAX)]  [(r 28)])
    (OPER 42 Mov [(r 2)]  [(r 28)])
    (OPER 43 Push [(r 29)]  [(i 56)] [(PARAM_NUM 0)])
    (OPER 44 Push [(r 30)]  [(r 29)] [(PARAM_NUM 0)])
    (OPER 45 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 201 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 46 Store [(m EAX)]  [(r 31)])
    (OPER 47 Push [(r 32)]  [(i 61)] [(PARAM_NUM 0)])
    (OPER 48 Push [(r 33)]  [(r 32)] [(PARAM_NUM 0)])
    (OPER 49 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 202 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 50 Store [(m EAX)]  [(r 34)])
    (OPER 203 Mov [(r 35)]  [(r 2)])
    (OPER 51 Add_I [(r 35)]  [(r 35)(r 3)])
    (OPER 52 Push [(r 36)]  [(r 35)] [(PARAM_NUM 0)])
    (OPER 53 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 204 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 54 Store [(m EAX)]  [(r 37)])
    (OPER 55 Push [(r 38)]  [(i 10)] [(PARAM_NUM 0)])
    (OPER 56 Push [(r 39)]  [(r 38)] [(PARAM_NUM 0)])
    (OPER 57 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 205 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 58 Store [(m EAX)]  [(r 40)])
    (OPER 59 Push [(r 41)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 60 Mov [(r 5)]  [(r 41)])
    (OPER 61 Push [(r 42)]  [(i 10)] [(PARAM_NUM 0)])
    (OPER 207 Mov [(r 43)]  [(i 0)])
    (OPER 206 Cmp [(m Flags)]  [(r 5)(r 42)])
    (OPER 208 BGE []  [(bb 31)(m Flags)])
  )
  (BB 30
    (OPER 209 Mov [(r 43)]  [(i 1)])
  )
  (BB 31
    (OPER 63 Push [(r 44)]  [(r 43)] [(PARAM_NUM 0)])
    (OPER 210 Cmp [(m Flags)]  [(r 44)(i 0)])
    (OPER 64 BEQ []  [(bb 10)(m Flags)()
])
  )
  (BB 9
    (OPER 65 Push [(r 45)]  [(i 48)] [(PARAM_NUM 0)])
    (OPER 211 Mov [(r 46)]  [(r 45)])
    (OPER 66 Add_I [(r 46)]  [(r 46)(r 5)])
    (OPER 67 Push [(r 47)]  [(r 46)] [(PARAM_NUM 0)])
    (OPER 68 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 212 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 69 Store [(m EAX)]  [(r 48)])
    (OPER 70 Push [(r 49)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 213 Mov [(r 50)]  [(r 5)])
    (OPER 71 Add_I [(r 50)]  [(r 50)(r 49)])
    (OPER 72 Mov [(r 5)]  [(r 50)])
    (OPER 73 Push [(r 51)]  [(r 43)] [(PARAM_NUM 0)])
    (OPER 214 Cmp [(m Flags)]  [(r 51)(i 0)])
    (OPER 74 BNE []  [(bb 9)(m Flags)()
])
  )
  (BB 10
    (OPER 75 Push [(r 52)]  [(i 10)] [(PARAM_NUM 0)])
    (OPER 76 Push [(r 53)]  [(r 52)] [(PARAM_NUM 0)])
    (OPER 77 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 215 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 78 Store [(m EAX)]  [(r 54)])
    (OPER 79 Push [(r 55)]  [(i 67)] [(PARAM_NUM 0)])
    (OPER 80 Push [(r 56)]  [(r 55)] [(PARAM_NUM 0)])
    (OPER 81 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 216 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 82 Store [(m EAX)]  [(r 57)])
    (OPER 83 Push [(r 58)]  [(i 83)] [(PARAM_NUM 0)])
    (OPER 84 Push [(r 59)]  [(r 58)] [(PARAM_NUM 0)])
    (OPER 85 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 217 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 86 Store [(m EAX)]  [(r 60)])
    (OPER 87 Push [(r 61)]  [(i 3510)] [(PARAM_NUM 0)])
    (OPER 88 Push [(r 62)]  [(r 61)] [(PARAM_NUM 0)])
    (OPER 89 JSR []  [(s printInt)] [(numParams 1)])
    (OPER 218 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 90 Store [(m EAX)]  [(r 63)])
    (OPER 91 Push [(r 64)]  [(i 10)] [(PARAM_NUM 0)])
    (OPER 92 Push [(r 65)]  [(r 64)] [(PARAM_NUM 0)])
    (OPER 93 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 219 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 94 Store [(m EAX)]  [(r 66)])
    (OPER 95 Push [(r 67)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 96 Mov [(r 1)]  [(r 67)])
    (OPER 97 Push [(r 68)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 98 Mov [(r 2)]  [(r 68)])
    (OPER 99 Push [(r 69)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 100 Mov [(r 3)]  [(r 69)])
    (OPER 101 Push [(r 70)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 102 Mov [(r 4)]  [(r 70)])
    (OPER 103 Push [(r 71)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 104 Mov [(r 5)]  [(r 71)])
    (OPER 105 Push [(r 72)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 221 Mov [(r 73)]  [(i 0)])
    (OPER 220 Cmp [(m Flags)]  [(r 1)(r 72)])
    (OPER 222 BNE []  [(bb 33)(m Flags)])
  )
  (BB 32
    (OPER 223 Mov [(r 73)]  [(i 1)])
  )
  (BB 33
    (OPER 107 Push [(r 74)]  [(r 73)] [(PARAM_NUM 0)])
    (OPER 224 Cmp [(m Flags)]  [(r 74)(i 0)])
    (OPER 108 BEQ []  [(bb 12)(m Flags)()
])
  )
  (BB 11
    (OPER 109 Push [(r 75)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 226 Mov [(r 76)]  [(i 0)])
    (OPER 225 Cmp [(m Flags)]  [(r 2)(r 75)])
    (OPER 227 BNE []  [(bb 35)(m Flags)])
  )
  (BB 34
    (OPER 228 Mov [(r 76)]  [(i 1)])
  )
  (BB 35
    (OPER 111 Push [(r 77)]  [(r 76)] [(PARAM_NUM 0)])
    (OPER 229 Cmp [(m Flags)]  [(r 77)(i 0)])
    (OPER 112 BEQ []  [(bb 15)(m Flags)()
])
  )
  (BB 14
    (OPER 113 Push [(r 78)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 114 Mov [(r 5)]  [(r 78)])
  )
  (BB 17
    (OPER 119 Push [(r 82)]  [(i 2)] [(PARAM_NUM 0)])
    (OPER 120 Mov [(r 5)]  [(r 82)])
  )
  (BB 19
    (OPER 131 Jmp [(bb 16)]  [(bb 17)])
  )
  (BB 13
    (OPER 135 Push [(r 89)]  [(i 10)] [(PARAM_NUM 0)])
    (OPER 231 Mov [(r 90)]  [(i 0)])
    (OPER 230 Cmp [(m Flags)]  [(r 5)(r 89)])
    (OPER 232 BNE []  [(bb 37)(m Flags)])
  )
  (BB 36
    (OPER 233 Mov [(r 90)]  [(i 1)])
  )
  (BB 37
    (OPER 137 Push [(r 91)]  [(r 90)] [(PARAM_NUM 0)])
    (OPER 234 Cmp [(m Flags)]  [(r 91)(i 0)])
    (OPER 138 BEQ []  [(bb 24)(m Flags)()
])
  )
  (BB 23
    (OPER 139 Push [(r 92)]  [(i 99)] [(PARAM_NUM 0)])
    (OPER 140 Push [(r 93)]  [(r 92)] [(PARAM_NUM 0)])
    (OPER 141 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 235 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 142 Store [(m EAX)]  [(r 94)])
    (OPER 143 Push [(r 95)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 144 Push [(r 96)]  [(r 95)] [(PARAM_NUM 0)])
    (OPER 145 JSR []  [(s putDigit)] [(numParams 1)])
    (OPER 236 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 146 Store [(m EAX)]  [(r 97)])
    (OPER 147 Push [(r 98)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 148 Push [(r 99)]  [(r 98)] [(PARAM_NUM 0)])
    (OPER 149 JSR []  [(s putDigit)] [(numParams 1)])
    (OPER 237 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 150 Store [(m EAX)]  [(r 100)])
    (OPER 151 Push [(r 101)]  [(i 108)] [(PARAM_NUM 0)])
    (OPER 152 Push [(r 102)]  [(r 101)] [(PARAM_NUM 0)])
    (OPER 153 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 238 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 154 Store [(m EAX)]  [(r 103)])
  )
  (BB 25
    (OPER 175 Push [(r 118)]  [(i 10)] [(PARAM_NUM 0)])
    (OPER 176 Push [(r 119)]  [(r 118)] [(PARAM_NUM 0)])
    (OPER 177 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 239 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 178 Store [(m EAX)]  [(r 120)])
    (OPER 179 Push [(r 121)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 180 Push [(m EAX)]  [(r 121)] [(PARAM_NUM 0)])
  )
  (BB 1
    (OPER 2 Return []  [(m EAX)])
  )
  (BB 5
    (OPER 13 Push [(r 11)]  [(i 4)] [(PARAM_NUM 0)])
    (OPER 14 Store []  [(r 11)(s a)])
    (OPER 15 Jmp [(bb 6)]  [(bb 6)])
  )
  (BB 21
    (OPER 127 Push [(r 87)]  [(i 3)] [(PARAM_NUM 0)])
    (OPER 128 Mov [(r 5)]  [(r 87)])
    (OPER 129 Jmp [(bb 22)]  [(bb 17)])
  )
  (BB 18
    (OPER 121 Push [(r 83)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 241 Mov [(r 84)]  [(i 0)])
    (OPER 240 Cmp [(m Flags)]  [(r 4)(r 83)])
    (OPER 242 BNE []  [(bb 39)(m Flags)])
  )
  (BB 38
    (OPER 243 Mov [(r 84)]  [(i 1)])
  )
  (BB 39
    (OPER 123 Push [(r 85)]  [(r 84)] [(PARAM_NUM 0)])
    (OPER 244 Cmp [(m Flags)]  [(r 85)(i 0)])
    (OPER 124 BEQ []  [(bb 21)(m Flags)()
])
  )
  (BB 15
    (OPER 115 Push [(r 79)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 246 Mov [(r 80)]  [(i 0)])
    (OPER 245 Cmp [(m Flags)]  [(r 3)(r 79)])
    (OPER 247 BNE []  [(bb 41)(m Flags)])
  )
  (BB 40
    (OPER 248 Mov [(r 80)]  [(i 1)])
  )
  (BB 41
    (OPER 117 Push [(r 81)]  [(r 80)] [(PARAM_NUM 0)])
    (OPER 249 Cmp [(m Flags)]  [(r 81)(i 0)])
    (OPER 118 BEQ []  [(bb 18)(m Flags)()
])
  )
  (BB 12
    (OPER 132 Push [(r 88)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 133 Mov [(r 5)]  [(r 88)])
    (OPER 134 Jmp [(bb 13)]  [(bb 13)])
  )
  (BB 24
    (OPER 155 Push [(r 104)]  [(i 98)] [(PARAM_NUM 0)])
    (OPER 156 Push [(r 105)]  [(r 104)] [(PARAM_NUM 0)])
    (OPER 157 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 250 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 158 Store [(m EAX)]  [(r 106)])
    (OPER 159 Push [(r 107)]  [(i 97)] [(PARAM_NUM 0)])
    (OPER 160 Push [(r 108)]  [(r 107)] [(PARAM_NUM 0)])
    (OPER 161 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 251 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 162 Store [(m EAX)]  [(r 109)])
    (OPER 163 Push [(r 110)]  [(i 100)] [(PARAM_NUM 0)])
    (OPER 164 Push [(r 111)]  [(r 110)] [(PARAM_NUM 0)])
    (OPER 165 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 252 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 166 Store [(m EAX)]  [(r 112)])
    (OPER 167 Push [(r 113)]  [(i 61)] [(PARAM_NUM 0)])
    (OPER 168 Push [(r 114)]  [(r 113)] [(PARAM_NUM 0)])
    (OPER 169 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 253 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 170 Store [(m EAX)]  [(r 115)])
    (OPER 171 Push [(r 116)]  [(r 5)] [(PARAM_NUM 0)])
    (OPER 172 JSR []  [(s printInt)] [(numParams 1)])
    (OPER 254 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 173 Store [(m EAX)]  [(r 117)])
    (OPER 174 Jmp [(bb 25)]  [(bb 25)])
  )
)
