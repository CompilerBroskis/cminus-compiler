(FUNCTION  putDigit  [(int s)]
  (BB 2
    (OPER 9 Load [(r 1)]  [(m ESP)(i 4)])
  )
  (BB 3
    (OPER 4 Push [(r 2)]  [(i 48)] [(PARAM_NUM 0)])
    (OPER 10 Mov [(r 3)]  [(r 2)])
    (OPER 5 Add_I [(r 3)]  [(r 3)(r 1)])
    (OPER 6 Push [(r 4)]  [(r 3)] [(PARAM_NUM 0)])
    (OPER 7 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 11 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 8 Store [(m EAX)]  [(r 5)])
  )
  (BB 1
    (OPER 2 Return []  [(m EAX)])
  )
)
(FUNCTION  printInt  [(int x)]
  (BB 2
    (OPER 33 Load [(r 1)]  [(m ESP)(i 4)])
  )
  (BB 3
    (OPER 4 Push [(r 4)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 35 Mov [(r 5)]  [(i 0)])
    (OPER 34 Cmp [(m Flags)]  [(r 1)(r 4)])
    (OPER 36 BGE []  [(bb 9)(m Flags)])
  )
  (BB 8
    (OPER 37 Mov [(r 5)]  [(i 1)])
  )
  (BB 9
    (OPER 6 Push [(r 6)]  [(r 5)] [(PARAM_NUM 0)])
    (OPER 38 Cmp [(m Flags)]  [(r 6)(i 0)])
    (OPER 7 BEQ []  [(bb 5)(m Flags)()
])
  )
  (BB 4
    (OPER 8 Push [(r 7)]  [(i 45)] [(PARAM_NUM 0)])
    (OPER 9 Push [(r 8)]  [(r 7)] [(PARAM_NUM 0)])
    (OPER 10 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 39 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 11 Store [(m EAX)]  [(r 9)])
    (OPER 12 Push [(r 10)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 40 Mov [(r 11)]  [(r 10)])
    (OPER 13 Sub_I [(r 11)]  [(r 11)(r 1)])
    (OPER 14 Mov [(r 1)]  [(r 11)])
  )
  (BB 5
    (OPER 15 Mov [(r 3)]  [(r 1)])
    (OPER 16 Push [(r 12)]  [(i 10)] [(PARAM_NUM 0)])
    (OPER 41 Mov [(m EDX)]  [(i 0)])
    (OPER 42 Mov [(m EAX)]  [(r 1)])
    (OPER 17 Div [(m EAX)(m EDX)]  [(m EAX)(r 12)(m EDX)])
    (OPER 43 Mov [(r 13)]  [(m EAX)])
    (OPER 18 Mov [(r 1)]  [(r 13)])
    (OPER 19 Push [(r 14)]  [(i 10)] [(PARAM_NUM 0)])
    (OPER 44 Mov [(m EAX)]  [(r 1)])
    (OPER 20 Mul [(m EAX)(m EDX)]  [(m EAX)(r 14)])
    (OPER 45 Mov [(r 15)]  [(m EAX)])
    (OPER 46 Mov [(r 16)]  [(r 3)])
    (OPER 21 Sub_I [(r 16)]  [(r 16)(r 15)])
    (OPER 22 Mov [(r 2)]  [(r 16)])
    (OPER 23 Push [(r 17)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 48 Mov [(r 18)]  [(i 0)])
    (OPER 47 Cmp [(m Flags)]  [(r 1)(r 17)])
    (OPER 49 BLE []  [(bb 11)(m Flags)])
  )
  (BB 10
    (OPER 50 Mov [(r 18)]  [(i 1)])
  )
  (BB 11
    (OPER 25 Push [(r 19)]  [(r 18)] [(PARAM_NUM 0)])
    (OPER 51 Cmp [(m Flags)]  [(r 19)(i 0)])
    (OPER 26 BEQ []  [(bb 7)(m Flags)()
])
  )
  (BB 6
    (OPER 27 Push [(r 20)]  [(r 1)] [(PARAM_NUM 0)])
    (OPER 28 JSR []  [(s printInt)] [(numParams 1)])
    (OPER 52 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 29 Store [(m EAX)]  [(r 21)])
  )
  (BB 7
    (OPER 30 Push [(r 22)]  [(r 2)] [(PARAM_NUM 0)])
    (OPER 31 JSR []  [(s putDigit)] [(numParams 1)])
    (OPER 53 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 32 Store [(m EAX)]  [(r 23)])
  )
  (BB 1
    (OPER 2 Return []  [(m EAX)])
  )
)
(FUNCTION  fact  [(int x)]
  (BB 2
    (OPER 42 Load [(r 1)]  [(m ESP)(i 4)])
  )
  (BB 3
    (OPER 4 Push [(r 2)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 44 Mov [(r 3)]  [(i 0)])
    (OPER 43 Cmp [(m Flags)]  [(r 1)(r 2)])
    (OPER 45 BLE []  [(bb 11)(m Flags)])
  )
  (BB 10
    (OPER 46 Mov [(r 3)]  [(i 1)])
  )
  (BB 11
    (OPER 6 Push [(r 4)]  [(r 3)] [(PARAM_NUM 0)])
    (OPER 47 Cmp [(m Flags)]  [(r 4)(i 0)])
    (OPER 7 BEQ []  [(bb 5)(m Flags)()
])
  )
  (BB 4
    (OPER 8 Push [(r 5)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 48 Mov [(r 6)]  [(r 1)])
    (OPER 9 Sub_I [(r 6)]  [(r 6)(r 5)])
    (OPER 10 Push [(r 7)]  [(r 6)] [(PARAM_NUM 0)])
    (OPER 11 JSR []  [(s fact)] [(numParams 1)])
    (OPER 49 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 12 Store [(m EAX)]  [(r 8)])
    (OPER 50 Mov [(m EAX)]  [(r 1)])
    (OPER 13 Mul [(m EAX)(m EDX)]  [(m EAX)(r 8)])
    (OPER 51 Mov [(r 9)]  [(m EAX)])
    (OPER 14 Push [(m EAX)]  [(r 9)] [(PARAM_NUM 0)])
    (OPER 15 Jmp [(bb 1)]  [(bb 1)])
  )
  (BB 7
    (OPER 20 Push [(r 13)]  [(i 66)] [(PARAM_NUM 0)])
    (OPER 21 Push [(r 14)]  [(r 13)] [(PARAM_NUM 0)])
    (OPER 22 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 52 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 23 Store [(m EAX)]  [(r 15)])
    (OPER 24 Push [(r 16)]  [(i 65)] [(PARAM_NUM 0)])
    (OPER 25 Push [(r 17)]  [(r 16)] [(PARAM_NUM 0)])
    (OPER 26 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 53 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 27 Store [(m EAX)]  [(r 18)])
    (OPER 28 Push [(r 19)]  [(i 68)] [(PARAM_NUM 0)])
    (OPER 29 Push [(r 20)]  [(r 19)] [(PARAM_NUM 0)])
    (OPER 30 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 54 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 31 Store [(m EAX)]  [(r 21)])
    (OPER 32 Push [(r 22)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 33 Push [(r 23)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 55 Mov [(r 24)]  [(r 22)])
    (OPER 34 Sub_I [(r 24)]  [(r 24)(r 23)])
    (OPER 35 Push [(m EAX)]  [(r 24)] [(PARAM_NUM 0)])
  )
  (BB 1
    (OPER 2 Return []  [(m EAX)])
  )
  (BB 8
    (OPER 37 Push [(r 25)]  [(i 1)] [(PARAM_NUM 0)])
    (OPER 38 Push [(m EAX)]  [(r 25)] [(PARAM_NUM 0)])
    (OPER 39 Jmp [(bb 1)]  [(bb 1)])
    (OPER 40 Jmp [(bb 9)]  [(bb 7)])
  )
  (BB 5
    (OPER 16 Push [(r 10)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 57 Mov [(r 11)]  [(i 0)])
    (OPER 56 Cmp [(m Flags)]  [(r 1)(r 10)])
    (OPER 58 BGE []  [(bb 13)(m Flags)])
  )
  (BB 12
    (OPER 59 Mov [(r 11)]  [(i 1)])
  )
  (BB 13
    (OPER 18 Push [(r 12)]  [(r 11)] [(PARAM_NUM 0)])
    (OPER 60 Cmp [(m Flags)]  [(r 12)(i 0)])
    (OPER 19 BEQ []  [(bb 8)(m Flags)()
])
  )
)
(FUNCTION  main  []
  (BB 2
  )
  (BB 3
    (OPER 4 Push [(r 2)]  [(i 5)] [(PARAM_NUM 0)])
    (OPER 5 Mov [(r 1)]  [(r 2)])
    (OPER 6 Push [(r 3)]  [(r 1)] [(PARAM_NUM 0)])
    (OPER 7 JSR []  [(s fact)] [(numParams 1)])
    (OPER 19 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 8 Store [(m EAX)]  [(r 4)])
    (OPER 9 Push [(r 5)]  [(r 4)] [(PARAM_NUM 0)])
    (OPER 10 JSR []  [(s printInt)] [(numParams 1)])
    (OPER 20 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 11 Store [(m EAX)]  [(r 6)])
    (OPER 12 Push [(r 7)]  [(i 10)] [(PARAM_NUM 0)])
    (OPER 13 Push [(r 8)]  [(r 7)] [(PARAM_NUM 0)])
    (OPER 14 JSR []  [(s putchar)] [(numParams 1)])
    (OPER 21 Add_I [(m ESP)]  [(m ESP)(i 4)])
    (OPER 15 Store [(m EAX)]  [(r 9)])
    (OPER 16 Push [(r 10)]  [(i 0)] [(PARAM_NUM 0)])
    (OPER 17 Push [(m EAX)]  [(r 10)] [(PARAM_NUM 0)])
  )
  (BB 1
    (OPER 2 Return []  [(m EAX)])
  )
)
